pipeline {
    agent any

    environment {
        DOTNET_SDK_VERSION = '8.0.101'
        IMAGE_TAG = 'muhohoweb:3.0.0'
        KANIKO_IMAGE = 'gcr.io/kaniko-project/executor:latest'
        DOCKERFILE_PATH = '.' 
        DESTINATION = 'muhohoweb/ticketsservice:3.0.0' 
        DOCKERHUB_USERNAME="muhohoweb@gmail.com"

    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/samkirigha/staging.git', branch: 'master'
            }
        }

        stage('Build and Push Docker Image with Kaniko') {
    steps {
        script {
            withCredentials([usernamePassword(credentialsId: 'dockerHubCredentials', passwordVariable: 'DOCKERHUB_PASSWORD', usernameVariable: 'DOCKERHUB_USERNAME')]) {

                def dockerImage = 'muhohoweb/ticketsservice:1.0.5'
                
                sh """
                       /usr/local/bin/docker run --rm \\
                        -v /var/root/.jenkins/workspace/ticketservice \\
                        -e DOCKER_CONFIG=/kaniko/.docker/ \\
                        -w /workspace \\
                        gcr.io/kaniko-project/executor:latest \\
                        --dockerfile=Dockerfile \\
                        --destination=muhohoweb/ticketsservice:1.0.5 \
                        --context=/var/root/.jenkins/workspace/ticketservice/ticketsservice \\
                    --build-arg DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME \\
                    --build-arg DOCKERHUB_PASSWORD=$DOCKERHUB_PASSWORD
                """
                
            }
        }
    }
}




        stage('Deploy to Azure') {
            steps {
                script {
                    withCredentials([azureServicePrincipal('39fb0bee-8be9-40fa-a60c-0c20f1edb1fa')]) {
                        sh '''
                            /opt/homebrew/bin/az login --service-principal \\
                            -u $AZURE_CLIENT_ID \\
                            -p $AZURE_CLIENT_SECRET \\
                            -t $AZURE_TENANT_ID
                            /opt/homebrew/bin/az --help
                        '''
                    }  
                }
            }
        }
        

        stage('Push to Docker hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerHubCredentials', passwordVariable: 'DOCKERHUB_PASSWORD', usernameVariable: 'DOCKERHUB_USERNAME')]) {
                 
                    }

                }
            }
        }
    }
}